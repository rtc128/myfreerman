.\" Manpage for myfreerman.

.TH man 1 "myfreerman man page"

.SH NAME

myfreerman \- administer mysql backups

.SH SYNOPSIS

myfreerman [ -c <config> ] [ -l <log file format> ] [ -q ] [ -y ] <command> [ ... ]

.B commands

backup full | binlog

drop-db

init-db

init-slave <host>[:<port>] <user> <dir>

list [ -r <remote server> ] full | binlog

remove

restore

.SH DESCRIPTION

This is a tool that wraps MySQL Enterprise Backup to handle backups of MySQL databases.

It adds support for:

- Listing full and binlog bakcups

- Compressing binlog backups

- Restoring only a schema / only a list of tables

- Automated PITR

- Recovery window maintenance

- Creating a new database repository

- Creating a new slave server

.SH CONFIGURATION

The default configuration section is \fBmysqld\fR for the server and \fBmyfreerman\fR for myfreerman. You can define environment variable \fBMYSQL_SID\fR to change the section.
Exemple: MYSQL_SID=dev => sections are mysqld@dev and myfreerman@dev.

.SH OPTIONS

-c Use another configuration file, and not the default /etc/my.cnf.

-l Print output to log file. Variables in format are the same as in "date" command.

-q Quiet mode - do not show release information.

-y Assume YES to all questions.

.B backup

Backup the database. The new backup can be \fBfull\fR or \fBbinlog\fR backup.
	
	backup full [ -d <dir> ]
		
		Make a full database backup

			-d Save backup in <dir>, instead of directory set in configuration

	backup binlog

		Backup binary logs


.B drop-db

Drop current database (data files, binlogs, relay logs, redo and undo).

.B init-db

Create a new server repository - according to MySQL configuration parameters.

.B init-slave

init-slave <host>[:<port>] <user> <dir>

Initialize a new slave server, using a backup from master server.

	host: master hostname (optional port number, if not default port)

	user: replication username created in master

	dir: master backup directory

.B list

List current backups. List \fBfull\fR or \fBbinlog\fR backups.

	-r List backups from remote mysql server.

.B remove

Remove backups.

	remove expired
	
		expired: Remove expired backups, according to retention_period (configuration 'retention_period').

.B restore

Restore a previously created backup.
By default, after restoring a backup with PITR, a new backup incarnation is created. Directories $BACKUP_DIR/base and $BACKUP_DIR/binlog are moved to $BACKUP_DIR/restore/$CURRENT_TIMESTAMP.
If you anytime wish to access this backupset again, you need to manually move contents from $BACKUP_DIR/restore/$CURRENT_TIMESTAMP to $BACKUP_DIR. See -n option.
Server config file must exist.

restore [ -n ] [ -o <directory> ] [ -p <timestamp> ] [ -d <schema> [ -x <schema> ] | [ -t <schema1.table1[:<new table name>]> [ -t <schema2.table2>[:<new table name>] [ ... ] ] ] ]

   -o Use specified directory as backup origin, and not the one in configuration file.

   -n Do not create a new backup incarnation. This is used for PITR accross different environments, such as restoring production backups in test servers.

   -p Restore using a specific point in time - PITR.
		<timestmap>: hhmm | ddhhmm | MMddhhmm | yyyy-MM-dd_hh:mm:ss
			hh: hour, mm: minute, dd: day, MM: month, yyyy: year, ss: second

   -d Restore only a specific schema. Cannot be used with -t.

   -x Restore only a specific schema, but with a new name. Requires -d.

   -t Restore only specific table(s). Cannot be used with -d.

   -s Slave mode: do not apply binlogs after restoration. Needed when mounting a slave server.

.SH SEE ALSO

myfreerman.conf(8)

.SH AUTHOR

Rodrigo Cardoso <rodrigocardoso@tjrs.jus.br>
